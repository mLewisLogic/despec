name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linter
        run: bun run lint

      - name: Run type check
        run: bun run typecheck

  test:
    name: Test - ${{ matrix.runtime }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        runtime:
          - name: bun
            version: latest
          - name: node
            version: 20
          - name: node
            version: 22

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun (if runtime is bun)
        if: matrix.runtime.name == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.runtime.version }}

      - name: Setup Node.js (if runtime is node)
        if: matrix.runtime.name == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.runtime.version }}
          cache: 'npm'

      - name: Install dependencies (Bun)
        if: matrix.runtime.name == 'bun'
        run: bun install --frozen-lockfile

      - name: Install dependencies (Node)
        if: matrix.runtime.name == 'node'
        run: npm ci

      - name: Run full test suite
        run: |
          if [ "${{ matrix.runtime.name }}" = "bun" ]; then
            bun run test:full
          else
            npm run test:full
          fi

      - name: Generate coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.runtime.name == 'bun'
        run: bun run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.runtime.name == 'bun'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  stress-test:
    name: Stress Test
    runs-on: ubuntu-latest
    # Only run stress tests on main branch or manually
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run stress tests
        run: bun run test:stress
        timeout-minutes: 10

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Run security audit
        run: bun audit || true
        continue-on-error: true
